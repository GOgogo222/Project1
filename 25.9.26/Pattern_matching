//子字符串匹配模式

class Solution {
public:
    bool hasMatch(string s, string p) {
        int i = s.length();
        string t; //用来存储临时字符串
        string a = p; //创建p的副本
        p.erase(remove(p.begin(), p.end(), '*'), p.end()); //删去所有的“*”
        int j = p.length(); //p副本的长度
        int k = 0,n = 0;
        while(k < i && n < j) {
            if(s[k] == p[n]) {
                t.push_back(s[k]);
                k++;
                n++;
                continue;
            } else {
                k++;
            }
        }
        return p == t ? true : false;
    }
};

//把字符串S和省去"*"的模式字符串P进行对比（设为q）；
//i = S.length();
//j = P.length();
//遍历S,判断在S中能否找出子字符串q；

// 90%通过率
//失误案例：
// s = "nrnrs"
// p = "*nn"